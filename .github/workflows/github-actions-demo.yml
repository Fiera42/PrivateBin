name: push CI
run-name: ${{ github.repository }} CI [${{ github.event_name }}]
on: [push]
env:
  XDEBUG_MODE: coverage
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout ${{ github.ref }} on ${{ runner.os }} machine
        uses: actions/checkout@v4
      - name: ⬇️ Installing dependencies
        uses: php-actions/composer@v6
      - name: 🔍️ Running tests
        uses: php-actions/phpunit@v3
        with:
          php_extensions: gd sqlite3 dom json libxml mbstring tokenizer xml xmlwriter zip xdebug
          version: 9.6.11
          configuration: phpunit.xml
      - name: 🔨 Generating test logs
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: log/cobertura.xml
          badge: true
          format: markdown
          output: both
      - name: 📦️ Exporting coverage to action summary
        run: |
            echo "# Code coverage report" >> $GITHUB_STEP_SUMMARY
            cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
      - name: 🔍️ PHP Code Sniffer
        continue-on-error: true
        uses: php-actions/phpcs@v1
        with:
          php_version: 8.1
          path: ./lib
          report_file: phpcs_report.txt
      - name: 📦️ Exporting phpcs report to action summary
        run: |
          echo "# PHP Code Sniffer report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat phpcs_report.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: 🔍️ PHP Mess Detector
        continue-on-error: true
        uses: php-actions/phpmd@v1
        with:
          php_version: 8.1
          path: ./lib
          output: text
          ruleset: ruleset.xml
          reportfile: phpmd_report.txt
      - name: 📦️ Exporting phpmd report to action summary
        run: |
          echo "# PHP Mess Detector report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat phpmd_report.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          # Capture stdin output because phpstan does not have file export functions
          exec 3>&1
          output=$(cat)
      - name: 🔍️ PHP Static Analysis Tool
        continue-on-error: true
        uses: php-actions/phpstan@v3
        with:
          php_version: 8.1
          path: ./lib
      - name: 📦️ Exporting phpstan report to action summary
        run: |
          exec 1>&3 # restore "normal" stdin
          echo "# PHP Static Analysis Tool report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      
